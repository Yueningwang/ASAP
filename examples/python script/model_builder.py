# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# python1.py
# Created on: 2018-06-12 19:38:26.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy

# Load required toolboxes
arcpy.ImportToolbox("Model Functions")


# Local variables:
las__2_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\las"
File_las = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\las\\File.LAS"
ds__Name__lasd = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\lasd\\ds_%Name%.lasd"
dem__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\raster\\dem_%Name%"
Buildings = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\buildings_weekly\\buildings.gdb\\Buildings"
ed__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\raster\\ed_%Name%"
dr__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\solar\\direct\\dr_%Name%"
df__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\solar\\diffuse\\df_%Name%"
du__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\solar\\duration\\du_%Name%"
sm__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\slope\\sm_%Name%"
sl__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\slope\\sl_%Name%"
sme__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\slope\\sme_%Name%"
smp__Name__shp = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\mask\\slope_mask\\shp\\smp_%Name%.shp"
sma__Name__Tbl_dbf = smp__Name__shp
Name = "File"
am__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\aspect\\am_%Name%"
as__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\aspect\\as_%Name%"
ame__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\aspect\\ame_%Name%"
amp__Name__shp = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\mask\\aspect_mask\\shp\\amp_%Name%.shp"
ama__Name__Tbl_dbf = amp__Name__shp
so__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\solar\\area solar\\so_%Name%"
sma__Name__shp = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\mask\\slope_mask\\sma_%Name%.shp"
ama__Name__shp = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\mask\\aspect_mask\\ama_%Name%.shp"
tma__Name__shp = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\mask\\combined\\tma_%Name%.shp"
re__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\solar\\masked\\re_%Name%"
rep__Name__shp = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\solar\\masked\\shp\\rep_%Name%.shp"
z__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try1_mb\\zonal\\z_%Name%"

# Process: Iterate Files
arcpy.IterateFiles_mb(las__2_, "", "LAS", "RECURSIVE")

# Process: Create LAS Dataset
arcpy.CreateLasDataset_management("D:\\PV_Model_Builder\\Arcmap\\try1_mb\\las\\File.LAS", ds__Name__lasd, "NO_RECURSION", "", "", "COMPUTE_STATS", "RELATIVE_PATHS", "NO_FILES")

# Process: LAS Dataset to Raster
arcpy.LasDatasetToRaster_conversion(ds__Name__lasd, dem__Name_, "ELEVATION", "BINNING AVERAGE NATURAL_NEIGHBOR", "FLOAT", "CELLSIZE", "1", "1")

# Process: Extract by Mask
arcpy.gp.ExtractByMask_sa(dem__Name_, Buildings, ed__Name_)

# Process: Area Solar Radiation
arcpy.gp.AreaSolarRadiation_sa(ed__Name_, so__Name_, "61.158882308548", "300", "MultiDays   2018    5  160", "14", "0.5", "NOINTERVAL", "1", "FROM_DEM", "32", "8", "8", "UNIFORM_SKY", "0.3", "0.5", dr__Name_, df__Name_, du__Name_)

# Process: Raster Calculator
arcpy.gp.RasterCalculator_sa("Con(Raster(\"%sl_%Name%%\")<=35,0,1)", sm__Name_)

# Process: Slope
arcpy.Slope_3d(ed__Name_, sl__Name_, "DEGREE", "1")

# Process: Set Null (3)
arcpy.gp.SetNull_sa(sm__Name_, sl__Name_, sme__Name_, "\"VALUE\"=1")

# Process: Raster to Point
arcpy.RasterToPoint_conversion(sme__Name_, smp__Name__shp, "Value")

# Process: Aggregate Points
arcpy.AggregatePoints_cartography(smp__Name__shp, sma__Name__shp, "1 Feet")

# Process: Raster Calculator (2)
arcpy.gp.RasterCalculator_sa("Con((Raster(\"%as_%Name%%\")==-1)|(Raster(\"%as_%Name%%\")>=112.5)&(Raster(\"%as_%Name%%\")<=247.5),0,1)", am__Name_)

# Process: Aspect
arcpy.Aspect_3d(ed__Name_, as__Name_)

# Process: Set Null (2)
arcpy.gp.SetNull_sa(am__Name_, as__Name_, ame__Name_, "\"VALUE\"=1")

# Process: Raster to Point (2)
arcpy.RasterToPoint_conversion(ame__Name_, amp__Name__shp, "Value")

# Process: Aggregate Points (2)
arcpy.AggregatePoints_cartography(amp__Name__shp, ama__Name__shp, "1 Feet")

# Process: Clip
arcpy.Clip_analysis(sma__Name__shp, ama__Name__shp, tma__Name__shp, "")

# Process: Extract by Mask (2)
arcpy.gp.ExtractByMask_sa(so__Name_, tma__Name__shp, re__Name_)

# Process: Raster to Point (3)
arcpy.RasterToPoint_conversion(re__Name_, rep__Name__shp, "VALUE")

# Process: Zonal Statistics
arcpy.gp.ZonalStatistics_sa(rep__Name__shp, "GRID_CODE", re__Name_, z__Name_, "SUM", "DATA")

