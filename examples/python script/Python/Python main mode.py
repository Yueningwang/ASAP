# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# Python main mode.py
# Created on: 2018-06-15 10:59:00.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy

# Load required toolboxes
arcpy.ImportToolbox("D:/PV_Model_Builder/Arcmap/model/model.tbx")


# Local variables:
sol__Name___2_ = "D:\\PV_Model_Builder\\Arcmap\\try2_mb\\solar\\area solar\\sol_%Name%"
v_Name__shp = "D:\\PV_Model_Builder\\Arcmap\\try2_mb\\mask\\combined\\results\\%Name%.shp"
ms__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try2_mb\\solar\\masked\\ms_%Name%"
zo__Name_ = "D:\\PV_Model_Builder\\Arcmap\\try2_mb\\zonal\\zo_%Name%"

# Process: solar radiation influx (2)
arcpy.gp.toolbox = "D:/PV_Model_Builder/Arcmap/model/model.tbx";
# Warning: the toolbox D:/PV_Model_Builder/Arcmap/model/model.tbx DOES NOT have an alias. 
# Please assign this toolbox an alias to avoid tool name collisions
# And replace arcpy.gp.Model1(...) with arcpy.Model1_ALIAS(...)
arcpy.gp.Model1(sol__Name___2_)

# Process: mask (2)
arcpy.gp.toolbox = "D:/PV_Model_Builder/Arcmap/model/model.tbx";
# Warning: the toolbox D:/PV_Model_Builder/Arcmap/model/model.tbx DOES NOT have an alias. 
# Please assign this toolbox an alias to avoid tool name collisions
# And replace arcpy.gp.Model(...) with arcpy.Model_ALIAS(...)
arcpy.gp.Model(v_Name__shp)

# Process: Extract by Mask
arcpy.gp.ExtractByMask_sa(sol__Name___2_, v_Name__shp, ms__Name_)

# Process: Zonal Statistics
arcpy.gp.ZonalStatistics_sa(sol__Name___2_, "VALUE", ms__Name_, zo__Name_, "SUM", "DATA")

